<AsDescription target="7.2.4.4">
  <SuccessCriteria>
    <number>7.2.4.4</number>
    <name>文脈におけるリンクの目的に関する達成基準</name>
    <level>A</level>
  </SuccessCriteria>
  <item>
    <rownumber>1</rownumber>
    <id>G053</id>
    <実装方法タイトル>リンクテキストとそれが含まれている文章中のテキストとを組み合わせて、リンクの目的を特定する</実装方法タイトル>
    <対象>文中のリンク</対象>
    <見解>達成可能</見解>
    <代替もしくは推奨する方法>
      <body>できるかぎり、等級AAAの「リンクテキストだけ」でリンクの目的が分かるようにするとよい。それができない場合に等級Aの「プログラムが解釈可能なリンクの文脈」として、リンクが含まれる文を用いる。</body>
    </代替もしくは推奨する方法>
    <注意点>
      <body>WCAG 2.0解説書に「利用者があるリンクにやってきて、その位置にいたままで、リンクに関するより多くの情報を探し出すことができる必要がある。」とあるが、HPRやFocusTalkではフォーカスが移動してしまう。
しかし、行読みモード（矢印キー等）で前後に移動すれば文脈をたどることができるため、実用上の問題はほとんどないと考えることができる。</body>
    </注意点>
    <備考>PC-Talker7では、Ctrl＋上または下矢印キーで仮想カーソルを前後に移動させてもフォーカスは移動しない。</備考>
  </item>
  <item>
    <rownumber>2</rownumber>
    <id>H002-2</id>
    <実装方法タイトル>隣り合った画像とテキストリンクを同じリンクの中に入れる</実装方法タイトル>
    <対象>a要素内にあるimg要素のalt属性</対象>
    <見解>要注意</見解>
    <代替もしくは推奨する方法>
      <body>可能な場合には、リンクをすべて画像にするか、またはすべてテキストにしたほうがよい。</body>
    </代替もしくは推奨する方法>
    <注意点>
      <body>画像が装飾を目的にしていて、そのalt属性値が空の場合には問題ない。
ただし、alt属性値に代替テキストが記述されている場合、スクリーンリーダーのPC-Talker XPとNetReaderではその代替テキストが読み上げられないので注意が必要。</body>
    </注意点>
  </item>
  <item>
    <rownumber>3</rownumber>
    <id>H024</id>
    <実装方法タイトル>イメージマップのarea要素に代替テキストを提供する</実装方法タイトル>
    <対象>area要素のalt属性</対象>
    <見解>達成可能</見解>
    <代替もしくは推奨する方法>
      <body>IE 6、IE 7、IE 8、Firefox、Safari、Google Chromeでは画像を非表示にすると代替テキストが表示されない。そのため、画像非表示に設定しているユーザーを想定する場合には、イメージマップだけでなく、各ホットスポットと同じリンク先へのテキストリンクを提供するとよい。</body>
    </代替もしくは推奨する方法>
  </item>
  <item>
    <rownumber>4</rownumber>
    <id>H030-2</id>
    <実装方法タイトル>a 要素のリンクの目的を説明するリンクテキストを提供する</実装方法タイトル>
    <対象>a要素内にあるimg要素のalt属性</対象>
    <見解>達成可能</見解>
    <注意点>
      <body>Safariでは画像を非表示にすると代替テキストが表示されない。</body>
    </注意点>
  </item>
  <item>
    <rownumber>5</rownumber>
    <id>H030-5</id>
    <実装方法タイトル>a 要素のリンクの目的を説明するリンクテキストを提供する</実装方法タイトル>
    <対象>a要素内にあるimg要素のalt属性</対象>
    <見解>要注意</見解>
    <代替もしくは推奨する方法>
      <body>可能な場合には、リンクをすべて画像にするか、またはすべてテキストにしたほうがよい。</body>
    </代替もしくは推奨する方法>
    <注意点>
      <body>画像が装飾を目的にしていて、そのalt属性値が空の場合には問題ない。
ただし、alt属性値に代替テキストが記述されている場合、スクリーンリーダーのPC-Talker XPとNetReaderではその代替テキストが読み上げられないので注意が必要。</body>
    </注意点>
    <備考>実装方法としては、H2と同じ。</備考>
  </item>
  <item>
    <rownumber>6</rownumber>
    <id>H033-1</id>
    <実装方法タイトル>H33： title属性を用いて、リンクテキストの文言を補足する</実装方法タイトル>
    <対象>a要素のtitle属性値</対象>
    <見解>要注意</見解>
    <注意点>
      <body>マウス操作をしているユーザーにはツールチップで表示されるので有用な場面もあるが、キーボード操作ではtitle属性値がツールチップで表示されない。また、一部のスクリーンリーダーではtitle属性値を確認することは可能だが、title属性値の記述があることを知らせてくれる機能はない。</body>
    </注意点>
    <備考>使用することによる悪影響はなく、キーボード操作時も画面にツールチップが表示されるように、ブラウザの今後の機能向上に期待する。</備考>
  </item>
  <item>
    <rownumber>7</rownumber>
    <id>H033-2</id>
    <実装方法タイトル>H33： title属性を用いて、リンクテキストの文言を補足する</実装方法タイトル>
    <対象>a要素のtitle属性値</対象>
    <見解>要注意</見解>
    <注意点>
      <body>マウス操作をしているユーザーにはツールチップで表示されるので有用な場面もあるが、キーボード操作ではtitle属性値がツールチップで表示されない。また、一部のスクリーンリーダーではtitle属性値を確認することは可能だが、title属性値の記述があることを知らせてくれる機能はない。</body>
    </注意点>
    <備考>使用することによる悪影響はなく、キーボード操作時も画面にツールチップが表示されるように、ブラウザの今後の機能向上に期待する。</備考>
  </item>
  <item>
    <rownumber>8</rownumber>
    <id>H077-1</id>
    <実装方法タイトル>リンクテキストとそれが含まれているリスト項目とを組み合わせて、リンクの目的を特定する</実装方法タイトル>
    <対象>li要素内のa要素</対象>
    <見解>要注意</見解>
    <代替もしくは推奨する方法>
      <body>できるかぎり、等級AAAの「リンクテキストだけ」でリンクの目的が分かるようにするとよい。それができない場合に等級Aの「プログラムが解釈可能なリンクの文脈」として、リスト項目を用いる。</body>
    </代替もしくは推奨する方法>
    <備考>NVDAとNetReader（テキスト画面）しかサポートしておらず、その他の支援技術の機能向上に期待する。使用することによる悪影響はなく、サポートしていないスクリーンリーダーでも行読みモード（矢印キー等）で前後に移動すれば文脈をたどることができるため、実用上の問題はほとんどないと考えることができる。</備考>
  </item>
  <item>
    <rownumber>9</rownumber>
    <id>H077-2</id>
    <実装方法タイトル>リンクテキストとそれが含まれているリスト項目とを組み合わせて、リンクの目的を特定する</実装方法タイトル>
    <対象>li要素内のa要素</対象>
    <見解>要注意</見解>
    <代替もしくは推奨する方法>
      <body>できるかぎり、等級AAAの「リンクテキストだけ」でリンクの目的が分かるようにするとよい。それができない場合に等級Aの「プログラムが解釈可能なリンクの文脈」として、リスト項目を用いる。</body>
    </代替もしくは推奨する方法>
    <備考>NVDAとNetReader（テキスト画面）しかサポートしておらず、その他の支援技術の機能向上に期待する。使用することによる悪影響はなく、サポートしていないスクリーンリーダーでも行読みモード（矢印キー等）で前後に移動すれば文脈をたどることができるため、実用上の問題はほとんどないと考えることができる。</備考>
  </item>
  <item>
    <rownumber>10</rownumber>
    <id>H078</id>
    <実装方法タイトル>リンクテキストとそれが含まれているパラグラフとを組み合わせて、リンクの目的を特定する</実装方法タイトル>
    <対象>p要素内のa要素</対象>
    <見解>要注意</見解>
    <代替もしくは推奨する方法>
      <body>できるかぎり、等級AAAの「リンクテキストだけ」でリンクの目的が分かるようにするとよい。それができない場合に等級Aの「プログラムが解釈可能なリンクの文脈」として、パラグラフを用いる。</body>
    </代替もしくは推奨する方法>
    <備考>JAWS、NVDAとNetReader（テキスト画面）しかサポートしておらず、その他の支援技術の機能向上に期待する。使用することによる悪影響はなく、サポートしていないスクリーンリーダーでも行読みモード（矢印キー等）で前後に移動すれば文脈をたどることができるため、実用上の問題はほとんどないと考えることができる。</備考>
  </item>
  <item>
    <rownumber>11</rownumber>
    <id>H079</id>
    <実装方法タイトル>リンクテキストとそれが含まれているデータセル及び関連づけられた見出しセルとを組み合わせて、リンクの目的を特定する</実装方法タイトル>
    <対象>td要素内のa要素</対象>
    <見解>要注意</見解>
    <代替もしくは推奨する方法>
      <body>できるかぎり、等級AAAの「リンクテキストだけ」でリンクの目的が分かるようにするとよい。データテーブルでデータセルにリンクを置く際は冗長になりやすいので、その際には等級Aの「プログラムが解釈可能なリンクの文脈」として、見出しセルを用いる。</body>
    </代替もしくは推奨する方法>
    <備考>JAWSとHPRしかサポートしていないが、使用することによる悪影響はなく、その他の支援技術の機能向上に期待する。</備考>
  </item>
  <item>
    <rownumber>12</rownumber>
    <id>H080-1</id>
    <実装方法タイトル>リンクテキストとその直前にある見出し要素とを組み合わせて、リンクの目的を特定する</実装方法タイトル>
    <対象>h1～h6要素のセクション内にあるa要素</対象>
    <見解>要注意</見解>
    <代替もしくは推奨する方法>
      <body>できるかぎり、等級AAAの「リンクテキストだけ」でリンクの目的が分かるようにするとよい。それができない場合に等級Aの「プログラムが解釈可能なリンクの文脈」として、直前にある見出しを用いる。</body>
    </代替もしくは推奨する方法>
    <備考>JAWSしかサポートしておらず、その他の支援技術の機能向上に期待する。使用することによる悪影響はなく、サポートしていないスクリーンリーダーでも見出しジャンプの逆順（Shift＋Hキー）で前にある見出しを確認することはできる。しかし、フォーカスも移動してしまうので注意が必要である。</備考>
  </item>
  <item>
    <rownumber>13</rownumber>
    <id>H080-2</id>
    <実装方法タイトル>リンクテキストとその直前にある見出し要素とを組み合わせて、リンクの目的を特定する</実装方法タイトル>
    <対象>h1～h6要素のセクション内にあるa要素</対象>
    <見解>要注意</見解>
    <代替もしくは推奨する方法>
      <body>できるかぎり、等級AAAの「リンクテキストだけ」でリンクの目的が分かるようにするとよい。それができない場合に等級Aの「プログラムが解釈可能なリンクの文脈」として、直前にある見出しを用いる。</body>
    </代替もしくは推奨する方法>
    <備考>JAWSしかサポートしておらず、その他の支援技術の機能向上に期待する。使用することによる悪影響はなく、サポートしていないスクリーンリーダーでも見出しジャンプの逆順（Shift＋Hキー）で前にある見出しを確認することはできる。しかし、フォーカスも移動してしまうので注意が必要である。</備考>
  </item>
  <item>
    <rownumber>14</rownumber>
    <id>H080-3</id>
    <実装方法タイトル>リンクテキストとその直前にある見出し要素とを組み合わせて、リンクの目的を特定する</実装方法タイトル>
    <対象>h1～h6要素のセクション内にあるa要素</対象>
    <見解>要注意</見解>
    <代替もしくは推奨する方法>
      <body>できるかぎり、等級AAAの「リンクテキストだけ」でリンクの目的が分かるようにするとよい。それができない場合に等級Aの「プログラムが解釈可能なリンクの文脈」として、直前にある見出しを用いる。</body>
    </代替もしくは推奨する方法>
    <備考>JAWSしかサポートしておらず、その他の支援技術の機能向上に期待する。使用することによる悪影響はなく、サポートしていないスクリーンリーダーでも見出しジャンプの逆順（Shift＋Hキー）で前にある見出しを確認することはできるが、フォーカスも移動してしまう。</備考>
  </item>
  <item>
    <rownumber>15</rownumber>
    <id>H081-1</id>
    <実装方法タイトル>入れ子になったリスト項目にあるリンクテキストとその親のリスト項目とを組み合わせて、リンクの目的を特定する</実装方法タイトル>
    <対象>入れ子のli要素内にあるa要素</対象>
    <見解>達成不可能</見解>
    <代替もしくは推奨する方法>
      <body>等級AAAの「リンクテキストだけ」でリンクの目的が分かるようにするとよい。それができない場合には、等級Aの「プログラムが解釈可能なリンクの文脈」のうち、親のリスト項目以外の文脈を用いる。</body>
    </代替もしくは推奨する方法>
    <備考>親のリスト項目を読み上げるキー操作を提供しているスクリーンリーダーがない。今後の支援技術の機能向上に期待するが、現時点では利用者が親のリスト項目を文脈の一つとして利用することは困難である。</備考>
  </item>
  <item>
    <rownumber>16</rownumber>
    <id>H081-2</id>
    <実装方法タイトル>入れ子になったリスト項目にあるリンクテキストとその親のリスト項目とを組み合わせて、リンクの目的を特定する</実装方法タイトル>
    <対象>入れ子のli要素内にあるa要素</対象>
    <見解>達成不可能</見解>
    <代替もしくは推奨する方法>
      <body>等級AAAの「リンクテキストだけ」でリンクの目的が分かるようにするとよい。それができない場合には、等級Aの「プログラムが解釈可能なリンクの文脈」のうち、親のリスト項目以外の文脈を用いる。</body>
    </代替もしくは推奨する方法>
    <備考>親のリスト項目を読み上げるキー操作を提供しているスクリーンリーダーがない。今後の支援技術の機能向上に期待するが、現時点では利用者が親のリスト項目を文脈の一つとして利用することは困難である。</備考>
  </item>
</AsDescription>